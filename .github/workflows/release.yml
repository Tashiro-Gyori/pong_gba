name: Release

on:
  push:
    tags:
      - v.**

jobs:
  if_master:
    if: github.event.base_ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Check branch
        run: echo "New version on master is OK for release"
  
  build:
    runs-on: ubuntu-latest
    needs: if_master
    container: devkitpro/devkitarm
    steps:
      - uses: actions/checkout@v3

      - name: Build with Docker using devkitARM and push gba file (if new)
        run: |
          make
      - name: Create and archive production artifact
        uses: actions/upload-artifact@v3
        with:
          name: builded_pong
          path: |
            bin/pong.gba
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: builded_pong
          path: ./
      - uses: actions/checkout@v3
      - name: Get tag
        id: get-tag
        run: echo '::set-output name=RELEASE_VERSION::${GITHUB_REF#refs/*/}'
      - name: Create Release with tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.get-tag.outputs.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: |
            ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ github.token }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./pong.gba
          asset_name: pong.gba
          asset_content_type: application/octet-stream